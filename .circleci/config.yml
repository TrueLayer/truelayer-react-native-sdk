version: 2.1

orbs:
  node: circleci/node@5.1.0
  android: circleci/android@2.3.0
  rn: react-native-community/react-native@7.1.0

executors:
  base_executor:
    docker:
      - image: cimg/base:2023.04

jobs:
  verify-package-version:
    executor: base_executor
    steps:
      - checkout
      - run:
          name: Verify package.json version matches branch release number
          command: ./RNTrueLayerPaymentsSDK/scripts/check_package_version_against_branch.sh

  build-and-publish:
    executor: node/default
    working_directory: ~/project/RNTrueLayerPaymentsSDK
    parameters:
      isDryRun:
        type: boolean
        default: true
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Build SDK
          command: yarn build
      - when:
          condition: << parameters.isDryRun >>
          steps:
            - run:
                name: Publish to npm (dry run)
                command: |
                  echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
                  npm publish --dry-run
      - when:
          condition:
            and:
              - not: << parameters.isDryRun >>
          steps:
            - run:
                name: Publish to npm (actual)
                command: |
                  echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
                  npm publish

  build-android-demo-app:
    executor:
      name: android/android-machine
      tag: 2023.09.1
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install Yalc
          command: |
            npm i yalc -g
      - run:
          name: Publish Yalc
          command: |
            cd ~/project/RNTrueLayerPaymentsSDK
            yalc --version
            yarn install
            yarn build
            yalc publish
      - run:
          name: Install DemoApp dependencies
          command: |
            cd ~/project/DemoApp
            npx yalc add rn-truelayer-payments-sdk
            yarn install
      - run:
          name: build android
          command: |
            cd ~/project/DemoApp
            mkdir ./android/app/src/main/assets/
            yarn react-native bundle --dev false --platform android --entry-file index.js --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res
            cd android
            ./gradlew assembleDebug
      - android/create-avd:
          avd-name: test
          install: true
          system-image: "system-images;android-23;default;x86"
      - android/start-emulator:
          avd-name: test
          post-emulator-launch-assemble-command: "" # this can now be empty as the build was done in build-all step
          additional-args: "-partition-size 4096"
      - run:
          name: Setup quick-start service
          command: |
            cd ~
            git clone -b main git@github.com:TrueLayer/payments-quickstart.git
            cd payments-quickstart
            yarn install
            yarn start
          background: true
      - run:
          name: build uiautomator app
          command: |
            adb reverse tcp:3000 tcp:3000
            cd ~/project/DemoApp/android
            ./gradlew app:assembleDebugAndroidTest
            ./gradlew app:installDebug
            ./gradlew app:connectedDebugAndroidTest

  build-ios-demo-app:
    macos:
      xcode: 15.0.0
    resource_class: macos.m1.medium.gen1
    working_directory: /Users/distiller/project

    steps:
      - checkout
      - run:
          name: Install Yalc
          command: |
            npm i yalc -g
      - run:
          name: Publish Yalc
          command: |
            cd /Users/distiller/project/RNTrueLayerPaymentsSDK
            yalc --version
            yarn install
            yarn build
            yalc publish
      - run:
          name: Install DemoApp dependencies
          command: |
            cd /Users/distiller/project/DemoApp
            npx yalc add rn-truelayer-payments-sdk
            yarn install
      - run:
          name: build ios
          command: |
            cd /Users/distiller/project/DemoApp/ios
            bundle install
            gem install cocoapods
            bundle exec pod install
            cd /Users/distiller/project/DemoApp
            yarn react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ios/main.jsbundle --assets-dest ios
            cd ios
            xcodebuild -workspace DemoApp.xcworkspace -scheme DemoApp -destination generic/platform=iOS CODE_SIGN_IDENTITY="iPhone Developer"
            xcodebuild -workspace DemoApp.xcworkspace -scheme DemoApp -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.0' CODE_SIGN_IDENTITY="iPhone Developer" test 

workflows:
  version: 2
  verify-version:
    jobs:
      - verify-package-version:
          name: "verify-package-version"
          filters: &release_branch_filter
            branches:
              only: /^release\/.*/
      - build-and-publish:
          name: build-and-publish-dry-run
          isDryRun: true
          filters: *release_branch_filter
          requires:
            - verify-package-version
      - build-android-demo-app:
          name: build-android-demo-app
          filters: &release_branch_filter
            branches:
              only: /^release\/.*/
      - build-ios-demo-app:
          name: build-ios-demo-app
          filters: &release_branch_filter
            branches:
              only: /^release\/.*/

  build-and-publish-workflow:
    jobs:
      - build-and-publish:
          name: build-and-publish-dry-run
          isDryRun: true
          filters: &main_and_semver_filters
            branches:
              ignore: /.*/
            tags:
              only: /^(\d+\.){2}\d+$/
      - build-android-demo-app:
          name: build-android-demo-app
          filters: &main_and_semver_filters
            branches:
              only: /PX-98/
            tags:
              only: /^(\d+\.){2}\d+$/
      - build-ios-demo-app:
          name: build-ios-demo-app
          filters: &main_and_semver_filters
            branches:
              only: /PX-98/
            tags:
              only: /^(\d+\.){2}\d+$/
      - approval:
          type: approval
          requires:
            - build-android-demo-app
            - build-ios-demo-app
            - build-and-publish-dry-run
          filters: *main_and_semver_filters
      - build-and-publish:
          name: build-and-publish-real
          isDryRun: false
          requires:
            - approval
          filters: *main_and_semver_filters
